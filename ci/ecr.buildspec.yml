version: 0.2

env:
  shell: bash
  variables:
    DOCKER_BUILDKIT: 1
    PUBLIC_ECR_URL: public.ecr.aws/q3v2w3q5
    IMAGE_REPO_NAME: hogeyama/nnu
  parameter-store:
    DOCKERHUB_USERNAME: "/DockerHub/Username"
    DOCKERHUB_PASSWORD: "/DockerHub/Password"

phases:
  install:
    commands:
      - echo Installing AWS CLI v2...
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip -q awscliv2.zip
      - ./aws/install --update --bin-dir /root/.pyenv/shims
      - echo Logging in to Docker Hub...
      - docker login --username "${DOCKERHUB_USERNAME}" --password "${DOCKERHUB_PASSWORD}" "https://index.docker.io/v1/"
      - echo Logging in to Amazon ECR...
      - >
        aws ecr-public get-login-password --region us-east-1
        | docker login --username AWS --password-stdin "${PUBLIC_ECR_URL}"
  pre_build:
    commands:
      - echo Updating dependency image...
      - >
        docker build
        --cache-from "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:dependency"
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag "${IMAGE_REPO_NAME}:dependency"
        --target dependency
        .
      - docker tag "${IMAGE_REPO_NAME}:dependency" "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:dependency"
      - docker push "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:dependency"
      # Thanks to https://github.com/thii/aws-codebuild-extras
      - echo Set git revision information
      - |
        export CODEBUILD_GIT_REVISION="$(git rev-parse HEAD)"
        export CODEBUILD_GIT_BRANCH="$(git symbolic-ref HEAD --short 2>/dev/null)"
        if [ "$CODEBUILD_GIT_BRANCH" = "" ] ; then
          export CODEBUILD_GIT_BRANCH="$(git rev-parse HEAD | xargs git name-rev | cut -d' ' -f2 | sed 's/remotes\/origin\///g')";
        fi
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - >
        docker build
        --cache-from "${IMAGE_REPO_NAME}:dependency"
        --build-arg BUILDKIT_INLINE_CACHE=1
        --build-arg GIT_REVISION="$CODEBUILD_GIT_BRANCH@$CODEBUILD_GIT_REVISION"
        --tag "${IMAGE_REPO_NAME}:${IMAGE_REPO_PUSH_TAG}"
        .
      - docker tag "${IMAGE_REPO_NAME}:${IMAGE_REPO_PUSH_TAG}" "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:${IMAGE_REPO_PUSH_TAG}"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:${IMAGE_REPO_PUSH_TAG}"
      - printf '[{"name":"nnu","imageUri":"%s"}]' "${PUBLIC_ECR_URL}/${IMAGE_REPO_NAME}:${IMAGE_REPO_PUSH_TAG}" > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
